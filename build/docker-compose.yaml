version: "3.9"
services:
    todo-app:
        container_name: todo-list
        build:
            context: ../
            dockerfile: build/Dockerfile
        image: todo-list:latest
        ports:
            - "8080:8080"
            - "8081:8081"
        networks:
            - todo
        depends_on:
            - todo-postgres
        environment:
            - POSTGRES_PASSWORD=todo_app
            - POSTGRES_USERNAME=todo_app
            - POSTGRES_HOST=todo-postgres
            - OTEL_EXPORTER_GRPC_ENDPOINT=todo-otel-collector
            - DD_AGENT_HOST=datadog
            - DD_API_KEY=${DD_API_KEY}
        restart: always
    todo-postgres:
        container_name: todo-postgres
        build:
            context: ./pg
            dockerfile: Dockerfile
        ports:
           - "5432:5432"
        networks:
            - todo
        environment:
            - POSTGRES_PASSWORD=postgres
    datadog:
        container_name: datadog
        pid: host
        image: datadog/agent
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock:ro
            - /proc/:/host/proc/:ro
            - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro
            - /var/lib/docker/containers:/var/lib/docker/containers:ro
        environment:
            - DD_API_KEY=${DD_API_KEY}
            - DD_SITE=datadoghq.com
            - DD_LOGS_ENABLED=true
            - DD_DOGSTATSD_NON_LOCAL_TRAFFIC=true
            - DD_APM_ENABLED=true
            - DD_APM_NON_LOCAL_TRAFFIC=true
        networks:
            - todo
        # labels:
        #     com.datadoghq.ad.logs: '[{"source":"todo-postgres". "service":"todo-postgres"}]'
    todo-jaeger:
        container_name: todo-jaeger
        image: jaegertracing/all-in-one:1.35.1
        ports:
            - "16686:16686"
            - "14268"
            - "14250"
        environment:
            - COLLECTOR_OTLP_ENABLED=true
        networks:
            - todo
    todo-otel-collector:
        container_name: todo-otel-collector
        image: ghcr.io/open-telemetry/opentelemetry-collector-releases/opentelemetry-collector-contrib:0.52.0
        ports:
            - "1888:1888"
            - "13133:13133"
            - "4317:4317"
            - "4318:4318"
            - "55670:55679"
        depends_on:
            - todo-jaeger
        networks:
            - todo
        volumes:
            - ./otel-collector/otel-local-config.yaml:/etc/collector-gateway.yaml
        command: ["--config=/etc/collector-gateway.yaml"]
    todo-prometheus:
        container_name: todo-prometheus
        build:
            context: ./prometheus
            dockerfile: Dockerfile
        ports:
            - "9090:9090"
        networks:
            - todo
    todo-grafana:
        container_name: todo-grafana
        image: grafana/grafana-oss
        ports:
            - "3000:3000"
        volumes:
            - "grafana-data:/var/lib/grafana"
            - "./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources"
            - "./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards"
        networks:
            - todo
        
volumes:
    grafana-data:


networks:
    todo:
        driver: bridge
        